Problema ->  ZAMQUIN

La financiera La Clave tiene problemas con la gestión de solicitudes de préstamo, las cuáles son generadas por una herramienta que no
satisface los requisitos de las áreas de venta. Por otro lado, los analistas de venta realizan las solicitudes a mano, que produce sobrecarga de trabajo
y errores de cálculo. Ademas, los analistas no cuentan con herramientas para derivar las solicitudes de los préstamos hacia supervisores.
en el nuevo proyecto se requeria poder tener un manejo de contabilidad y conexion con instituciones financieras como el sii o bancos por lo que se nos 
encargo distintos puntos k facilitan lo mencionado anteriormente


Solución -> GONZA

Para solucionar este problema, nos encontramos desarrollando un aplicación web que permita a los solicitantes calcular el valor de las cuotas de su préstamo.
Por otra parte, también permite a los analistas y supervisores visualizar de forma rápida todas las solicitudes de préstamos asociadas a ellos. También facilita
la derivación de solicitudes por parte de los analistas, además de aceptar o rechazar una solicitud. 


Estado Acutal -> ESTEBAN 
Alpha: Stakeholders
Nuestro proyecto se encuentra actualmente en el estado 4, ya que el sistema aún no está listo para el despliegue.s

Alpha: oportunidad.
En este alpha se llego al estado 3, ya que no pudimos establecerle un valor econoómico a nuestra solución.

Alpha: Sistemas de software.
Al agregarse nuevos requerimientos, se retrocedió este alpha al estado "usable".

Alpha: Trabajo.
Este alpha se mantiene en el estado 5 debido a que no se han concretado reuniones con los stakeholders relacionados.a

Alpha: Equipo.
Este alpha se encuentra en el estado 3, esto ya que nuestro c´podigo aún presenta líneas inservibles.a

Alpha: Requerimientos
0



HU Priorizada -> GONZA

Nuestro proyecto actualmente posee 6 HU, de las cuáles fueron priorizadas la HU 4 Y 6, debido a que permitia a los trabajadores de la financiera ver de forma mas 
clara y ordenada los datos.


Escenarios de prueba -> NOK

Para el desarrollo de las entregas se realizaron escenarios de prueba para el Control de Usuarios (GET Y POST), y para el Control de solicitudes (GET Y POST),
los resultados se presentan en la siguiente tabla (Ojala explicar un poco de los escenarios )


Evaluacion arquitectura - ZAMQUIN

Se realizo una evaluacion a la arquitectura segun los siguientes concerns:
- Autorizacion: el cual se refiere a garantizar que solo los usuarios autorizados puedan acceder a las funcionalidades y datos del sistema, 
    dependiendo del tipo de usuario.
    
    En nuestra página la autentificación logra identificar entre los tipos de usuario y mostrar los datos según el tipo. 
    También hacemos uso de las herramientas de autenticación que ofrece el framework utilizado, con el cual nos asegura una forma segura de guardar 
    los datos del usuario y de realizar la autenticación de estos.



- Facilidad de operacion: la cual se centra en la facilidad con la que los usuarios y administradores pueden interactuar con la interfaz de tu sistema para gestionar solicitudes (eliminar y agregar) 
    de forma intuitiva y eficiente.

    El diseño de la interfaz del usuario se enfoca en la claridad visual, la jerarquía y la facilidad de uso. El diseño de la experiencia del 
    usuario busca optimizar el flujo de tareas, prevenir errores y brindar una experiencia fluida. Para lograrlo, se realizan pruebas de 
    usabilidad, se itera el diseño y se hace un log de los cambios (usando github). Este enfoque se basa en la retroalimentación de los usuarios y en interfaces simples 
    y claras.

    Funcionalidad vs. Simplicidad: Agregar muchas funcionalidades puede complicar la interfaz.

    Diseño personalizado vs. Frameworks UI: Desarrollar una interfaz personalizada puede ofrecer mayor flexibilidad, pero requiere más tiempo y esfuerzo. 
    Utilizar un framework UI puede acelerar el desarrollo, pero puede limitar la personalización.

- Resistencia a ataques:  Este concern se centra en la capacidad del sistema para resistir y recuperarse de ataques maliciosos.
    El diseño considera la seguridad como un pilar fundamental de la arquitectura. Se busca integrar principios de seguridad en cada etapa del 
    desarrollo, proteger datos con cifrado y gestionar vulnerabilidades de manera proactiva. Para lograrlo, se implementan medidas como la 
    validación de entradas, la protección contra ataques comunes y las pruebas de seguridad. Sin embargo, existen trade-offs entre la seguridad y el 
    rendimiento, así como la complejidad del sistema.


Conclusiones -> ESTEBAN

Nuestro proyecto aborda de forma efectiva la problemática en la gestión de solicitudes de préstamo. La aplicación web facilita 
la estimación de cuotas, agiliza el proceso de solicitud y análisis, y mejora la comunicación entre analistas y supervisores. La priorización de las 
HU 4 y 6 permitió una rápida visualización de datos, mejorando la eficiencia. La evaluación de la arquitectura, incluyendo la seguridad, la facilidad 
de operación y la resistencia a ataques, asegura un sistema robusto y confiable. Se reconoce que aún existen trade-offs entre funcionalidad y 
simplicidad, así como en la elección de frameworks UI. El proyecto se encuentra en desarrollo continuo, con la intención de mejorar y ampliar las 
funcionalidades para satisfacer las necesidades de La Clave.